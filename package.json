{
  "name": "cars-management-monorepo",
  "version": "1.1.0",
  "type": "module",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "debug:image": "dotenv -- sh -c 'docker run -it -p 3000:3000 --env-file packages/car-management-api/.env.preview.docker $IMAGE_REGISTRY/$IMAGE_NAME:latest sh'",
    "preview:image": "dotenv -- sh -c 'docker run -it -p 3000:3000 --env-file packages/car-management-api/.env.preview.docker $IMAGE_REGISTRY/$IMAGE_NAME:latest'",
    "build-and-push:image": "dotenv -- sh -c 'docker buildx build --platform linux/amd64,linux/arm64 --push --load -t $IMAGE_REGISTRY/$IMAGE_NAME:latest .'",
    "build-and-push:image:production": "dotenv -- sh -c 'docker buildx build --platform linux/amd64,linux/arm64 --push --load -t $IMAGE_REGISTRY/$IMAGE_NAME:$npm_package_version .'",
    "build-and-push:image:debug-tools": "dotenv -- sh -c 'docker buildx build --platform linux/amd64,linux/arm64 --push --load -f Dockerfile-debug -t $IMAGE_REGISTRY/deug-tools:latest .'",
    "deploy:staging": "bash scripts/deploy.sh staging aliyun-car",
    "deploy:production": "bash scripts/deploy.sh production aliyun-car-prod",
    "test": "npm test --workspaces --if-present",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "preview": "npm run clean && npm-run-all --parallel preview:frontend preview:backend:*",
    "preview:frontend": "npm run build:watch -w car-management-dashboard",
    "preview:backend:build": "npm exec -w car-management-api -- pkgroll --watch",
    "preview:backend:serve": "while [ ! -f packages/car-management-api/dist/index.js ]; do sleep 1; done &&  npm run start -w car-management-api",
    "clean": "rimraf packages/car-management-api/dist"
  },
  "description": "",
  "main": "index.js",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "dotenv-cli": "^7.4.2",
    "nodemon": "^3.1.10",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1"
  }
}
